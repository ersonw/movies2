import * as React from 'react';import SimpleLineIcons from 'react-native-vector-icons/SimpleLineIcons';import Colors from '../constants/Colors';import {Dimensions, Image, Text, TouchableHighlight, View} from 'react-native';import {Avatar, Input, ListItem} from 'react-native-elements';import {useEffect, useState} from 'react';import {ParamListBase, RouteProp} from "@react-navigation/native";import { NativeStackNavigationOptions } from '@react-navigation/native-stack';const {width} = Dimensions.get('window');const HeaderSearchOption = ({route, navigation}: { route: RouteProp<ParamListBase, string>; navigation: any; }) => {    const list = [        {            name: 'Amy Farha',            avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/ladylexy/128.jpg',            subtitle: 'Vice President',        },        {            name: 'Chris Jackson',            avatar_url: 'https://s3.amazonaws.com/uifaces/faces/twitter/adhamdannaway/128.jpg',            subtitle: 'Vice Chairman',        },    ];    const [focused, setFocused] = useState(false);    const [searchText, setSearchText] = useState('');    useEffect(() => {        //    });    return {        headerLeft: () => null,        // headerTitle: () => null,        // headerRight: () => null,        headerTitle: () => (            <View                style={{                    width: width - 65,                    // backgroundColor: Colors.black,                    justifyContent: 'flex-start',                    // marginBottom: 9,                    // paddingBottom: 15,                }}            >                <Input                    onFocus={() => setFocused(true)}                    onBlur={() => setFocused(false)}                    placeholder="搜索您喜欢的内容"                    selectionColor={Colors.date}                    returnKeyType="search"                    textAlign="center"                    underlineColorAndroid="transparent"                    maxLength={20}                    multiline={false}                    value={searchText}                    onChangeText={(text) => setSearchText(text)}                    inputContainerStyle={{                        borderWidth: 0,                        borderColor: 'transparent',                        alignItems: 'center',                        height: 42,                    }}                    style={{                        alignItems: 'center',                        color: Colors.primary,                        overflow: 'hidden',                    }}                    containerStyle={{                        alignItems: 'center',                        marginLeft: -10,                        width: '100%',                        height: 42,                        backgroundColor: Colors.tabBarInactiveText,                        borderRadius: 12,                        overflow: 'hidden',                    }}                    // placeholderTextColor={Colors.tabBarInactiveText}                    leftIconContainerStyle={{}}                    leftIcon={                        <SimpleLineIcons                            name="magnifier"                            size={18}                            color={Colors.white}                            // style={{marginLeft: 9}}                            onPress={() => navigation.navigate('SearchStack')}                        />                    }                    rightIconContainerStyle={{                        marginLeft: 10,                    }}                    rightIcon={                        <>                            {searchText.length > 0 &&                                (<SimpleLineIcons                                    name="close"                                    size={18}                                    color={Colors.headerButton}                                    onPress={() => setSearchText('')}                                />)                            }                        </>                    }                />                {                    focused === true && list.map((l, i) => (                        <ListItem                            key={i}                            onPress={() => {                                console.log(l.name);                            }}                            bottomDivider                            hasTVPreferredFocus={false}                            tvParallaxProperties={false}>                            <Avatar source={{uri: l.avatar_url}}/>                            <ListItem.Content>                                <ListItem.Title>{l.name}</ListItem.Title>                                <ListItem.Subtitle>{l.subtitle}</ListItem.Subtitle>                            </ListItem.Content>                        </ListItem>                    ))                }            </View>        ),        headerRight: () => (            <View style={{                flexDirection: 'column',                alignItems: 'center',                // paddingTop: 15,            }}>                <SimpleLineIcons                    name="grid"                    size={20}                    color={Colors.headerButton}                    onPress={() => navigation.navigate('SettingStack')}                />                <Text style={{color: Colors.white}}>分类</Text>            </View>        ),        // headerBackground: ()=>(        //     <Image source={require('../../assets/images/77da2dfd7c63b487e168f6a43512be43.jpeg')} />        // ),        headerTitleAlign: 'left',        headerStyle: {            alignItems: 'center',            backgroundColor: Colors.headerBackgroundColor,        },        // headerSearchBarOptions: {},        // headerHeight: 300,        // headerTitleStyle: {        //     height: 3000,        // },    };};export default HeaderSearchOption;